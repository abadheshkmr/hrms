version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: hrms-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hrms
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hrms-network

  # NestJS Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hrms-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=hrms
      - RABBITMQ_URL=amqp://rabbitmq:5672
    ports:
      - '3000:3000'
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - hrms-network
    command: npm run start:dev

  # Tenant Management Frontend
  tenant-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://nginx:80/api
    container_name: hrms-tenant-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://nginx:80/api
    ports:
      - '3001:3000'
    volumes:
      - ./frontend:/app
      - tenant-frontend-node-modules:/app/node_modules
    networks:
      - hrms-network
    command: sh -c "cd /app && NODE_ENV=development npx turbo run dev --filter=tenant-management --no-daemon"

  # Admin Portal Frontend
  admin-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://nginx:80/api
    container_name: hrms-admin-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://nginx:80/api
    ports:
      - '3002:3000'
    volumes:
      - ./frontend:/app
      - admin-frontend-node-modules:/app/node_modules
    networks:
      - hrms-network
    command: sh -c "cd /app && NODE_ENV=development npx turbo run dev --filter=admin-portal --no-daemon"

  # Nginx as API Gateway
  nginx:
    image: nginx:alpine
    container_name: hrms-nginx
    restart: unless-stopped
    depends_on:
      - backend
      - tenant-frontend
      - admin-frontend
    ports:
      - '80:80'
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - hrms-network

  # RabbitMQ for Event-Driven Architecture
  rabbitmq:
    image: rabbitmq:3-management
    container_name: hrms-rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - hrms-network

# Volumes
volumes:
  postgres-data:
  rabbitmq-data:
  tenant-frontend-node-modules:
  admin-frontend-node-modules:

# Networks
networks:
  hrms-network:
    driver: bridge
